buildscript {
    dependencies {
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.+'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.60'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.60' apply false
    id 'org.jetbrains.dokka' version '0.9.17' apply false
}

allprojects {
    group = 'me.ccampo'
    version = '0.1.1'
    description = 'A small Kotlin library to convert UUIDs to Base62 encoded strings. Perfect for URLs!'

    repositories {
        jcenter()
    }
}

subprojects {
    apply plugin: 'org.jetbrains.kotlin.jvm'

    if (name != 'spring-boot-starter') {
        apply plugin: 'org.jetbrains.dokka'

        dokka {
            outputFormat = 'javadoc'
            outputDirectory = "${buildDir}/javadoc"
        }

        task dokkaJar(type: Jar, dependsOn: dokka) {
            archiveClassifier.set('javadoc')
            from dokka.outputDirectory
        }

        task sourcesJar(type: Jar) {
            archiveClassifier.set('sources')
            from sourceSets.main.allSource
        }

        artifacts {
            archives dokkaJar
            archives sourcesJar
        }

        compileKotlin {
            kotlinOptions {
                freeCompilerArgs = ['-Xjsr305=strict']
                jvmTarget = '1.8'
            }
        }

        compileTestKotlin {
            kotlinOptions {
                freeCompilerArgs = ['-Xjsr305=strict']
                jvmTarget = '1.8'
            }
        }
    }

    archivesBaseName = "${rootProject.name}-${project.name}"

    dependencies {
        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
        implementation 'org.jetbrains.kotlin:kotlin-reflect'
        testImplementation 'org.jetbrains.kotlin:kotlin-test'
        testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
        testImplementation 'org.assertj:assertj-core:3.9.0'
    }

    apply from: "${rootProject.projectDir}/gradle/publishing.gradle"
}
